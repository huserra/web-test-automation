name: E-bebek Web Automation Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Create .env file
      run: |
        echo "USER_EMAIL=${{ secrets.USER_EMAIL }}" >> .env
        echo "USER_PASSWORD=${{ secrets.USER_PASSWORD }}" >> .env
        echo "BASE_URL=https://www.e-bebek.com" >> .env
        echo "HEADLESS=true" >> .env
        
    - name: Run tests
      run: npm test
      env:
        CI: true
        
    - name: Generate Allure Report
      if: always()
      run: npm run allure:generate
      
    - name: Upload Allure Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-results-node-${{ matrix.node-version }}
        path: allure-results/
        retention-days: 30
        
    - name: Upload Screenshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: screenshots-node-${{ matrix.node-version }}
        path: screenshots/
        retention-days: 7
        
    - name: Upload Videos
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: videos-node-${{ matrix.node-version }}
        path: videos/
        retention-days: 7

  test-headed:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Create .env file
      run: |
        echo "USER_EMAIL=${{ secrets.USER_EMAIL }}" >> .env
        echo "USER_PASSWORD=${{ secrets.USER_PASSWORD }}" >> .env
        echo "BASE_URL=https://www.e-bebek.com" >> .env
        echo "HEADLESS=false" >> .env
        
    - name: Run tests in headed mode
      run: npm run test:headed
      env:
        CI: true
        
    - name: Generate Allure Report
      if: always()
      run: npm run allure:generate
      
    - name: Upload Allure Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-results-headed
        path: allure-results/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Run dependency check
      run: npx audit-ci --config audit-ci.json
      continue-on-error: true

  code-quality:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npx eslint . --ext .js --format json --output-file eslint-report.json
      continue-on-error: true
      
    - name: Upload ESLint Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: eslint-report
        path: eslint-report.json
        retention-days: 7

  deploy-allure-report:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download Allure Results
      uses: actions/download-artifact@v4
      with:
        path: allure-results-downloads
        pattern: allure-results-node-*
        merge-multiple: true
        
    - name: Generate Allure Report
      run: npm run allure:generate
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report
        force_orphan: true